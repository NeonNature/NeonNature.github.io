{"version":3,"sources":["assets/images/Pixel_heart_red.svg","assets/images/fun.jpg","assets/music sync /^/.//.*/.m4a$","assets/music/Coconut.m4a","assets/music/LuSoTarHar.m4a","assets/music/Rickroll.m4a","pages/Home.js","assets/scripts/routes.js","App.js","assets/scripts/serviceWorker.js","index.js"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","Home","state","days","months","years","dayMode","monthMode","yearMode","funMode","songList","activeSong","heartCount","rotate","anime","targets","translateX","value","duration","loop","selectMode","mode","setState","selectFunMode","val","disco","backgroundColor","play","width","border","height","display","opacity","given","moment","current","startOf","diff","asDays","asMonths","toFixed","asYears","randomSong","this","Math","floor","random","length","i","Xpercent","Ypercent","Xdura","Ydura","top","right","hearts","push","key","src","require","className","params","onClick","url","playStatus","Sound","status","PLAYING","STOPPED","Component","path","exact","component","App","basename","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cdc32b09.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Pixel_heart_red.b2eb36ca.svg\";","module.exports = __webpack_public_path__ + \"static/media/fun.9ad1389f.jpg\";","var map = {\n\t\"./Coconut.m4a\": 314,\n\t\"./LuSoTarHar.m4a\": 315,\n\t\"./Rickroll.m4a\": 316\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 313;","module.exports = __webpack_public_path__ + \"static/media/Coconut.59183225.m4a\";","module.exports = __webpack_public_path__ + \"static/media/LuSoTarHar.f72fa29e.m4a\";","module.exports = __webpack_public_path__ + \"static/media/Rickroll.f93d0321.m4a\";","import React, { Component } from 'react';\nimport { Modal, ModalBody } from 'reactstrap';\nimport Particles from 'react-particles-js';\nimport moment from 'moment';\nimport anime from 'animejs';\nimport Sound from 'react-sound';\n\nclass Home extends Component {\n\n    state = {\n        days: '',\n        months: '',\n        years: '',\n        dayMode: true,\n        monthMode: false,\n        yearMode: false,\n        funMode: false,\n        songList: [\n            'LuSoTarHar',\n            'Coconut',\n            'Rickroll'\n        ],\n        activeSong: '',\n        heartCount: 29\n    }\n\n    componentDidMount() {\n        let given = moment(\"2017-12-29\", \"YYYY-MM-DD\");\n        let current = moment().startOf('day');\n\n        let days = moment.duration(current.diff(given)).asDays() + 1,\n        months = moment.duration(current.diff(given)).asMonths().toFixed(2),\n        years = moment.duration(current.diff(given)).asYears().toFixed(2);\n\n        let randomSong = this.state.songList[Math.floor(Math.random()*this.state.songList.length)]\n\n        for (let i = 0; i < this.state.heartCount; i++) {\n            let min = 1, max = 100;\n\n            let Xpercent = Math.floor(Math.random() * (max - min + 1)) + min;\n            let Ypercent = Math.floor(Math.random() * (max - min + 1)) + min;\n\n            let Xdura = Math.floor(Math.random() * (max - min + 1)) + min;\n            let Ydura = Math.floor(Math.random() * (max - min + 1)) + min;\n\n            anime({\n                targets: '.home-heart-' + (i+1),\n                top: [\n                    { value: Xpercent + '%', duration: Xdura * 100 },\n                    { value: (Xpercent + 1) + '%', duration: Xdura * 100 }\n                ],\n                right: [\n                    { value: Ypercent + '%', duration: Ydura * 100 },\n                    { value: (Ypercent + 1) + '%', duration: Ydura * 100 }\n                ],\n                // rotate: '1turn',\n                duration: 2000,\n                loop: true\n            });\n        }\n        \n\n\n        this.setState({\n            days,\n            months,\n            years,\n            activeSong: randomSong\n        });\n\n        this.rotate();\n    }\n\n    rotate = () => {\n        anime({\n            targets: '.home-value',\n            translateX: [\n                { value: 0, duration: 1200 },\n                { value: 0, duration: 800 }\n            ],\n            rotate: '1turn',\n            duration: 2000,\n            loop: true\n        });\n    }\n\n    selectMode = (mode) => {\n        switch (mode) {\n            case 'days':\n                this.setState({\n                    dayMode: true,\n                    monthMode: false,\n                    yearMode: false\n                }, () => {\n                    this.rotate();\n                });\n                break;\n            case 'months':\n                this.setState({\n                    dayMode: false,\n                    monthMode: true,\n                    yearMode: false\n                }, () => {\n                    this.rotate();\n                });\n                break;\n            case 'years':\n                this.setState({\n                    dayMode: false,\n                    monthMode: false,\n                    yearMode: true\n                }, () => {\n                    this.rotate();\n                });\n                break;\n            default: \n                this.setState({\n                    dayMode: true,\n                    monthMode: false,\n                    yearMode: false\n                }, () => {\n                    this.rotate();\n                });\n                break;\n        }\n    }\n\n    selectFunMode = () => {\n        const val = this.state.funMode\n        this.setState({\n            funMode: !val\n        }, () => {\n            let disco = anime({\n                targets: '.home-container',\n                backgroundColor: [\n                    { value: '#202543', duration: 1200 },\n                    { value: '#b33939', duration: 1200 },\n                    { value: '#cd6133', duration: 1200 },\n                    { value: '#ccae62', duration: 1200 },\n                    { value: '#218c74', duration: 1200 },\n                    { value: '#227093', duration: 1200 },\n                    { value: '#474787', duration: 1200 }\n                ],\n                duration: 2000,\n                loop: true\n            });\n\n            if (this.state.funMode) {\n                disco.play();\n\n                anime({\n                    targets: '.home-fun-wrap, .fun-btn',\n                    width: [\n                        { value: 0, duration: 1200 }\n                    ],\n                    border: [\n                        { value: 0, duration: 50 }\n                    ],\n                    height: [\n                        { value: 0, duration: 1200 }\n                    ],\n                    display: [\n                        { value: 'none', duration: 1200 }\n                    ],\n                    duration: 2000\n                });\n\n                anime({\n                    targets: '.fun-img',\n                    width: [\n                        { value: '100%', duration: 300000 }\n                    ],\n                    opacity: [\n                        { value: '0.5', duration: 300000 }\n                    ],\n                    duration: 2000\n                });\n            }\n        })\n    }\n\n    \n    render() {\n\n        const state = this.state;\n\n        let hearts = [];\n\n        for (let i = 0; i < state.heartCount; i++) {\n            hearts.push(<img key={i} src={require('../assets/images/Pixel_heart_red.svg')} className={\"home-heart home-heart-\"+ (i+1)} />);\n        }\n\n        return (\n            <div className=\"home-container\">\n            <Particles \n            params={{\n                \"particles\": {\n                    \"number\": {\n                      \"value\": 160,\n                      \"density\": {\n                        \"enable\": true,\n                        \"value_area\": 800\n                      }\n                    },\n                    \"color\": {\n                      \"value\": \"#ffffff\"\n                    },\n                    \"shape\": {\n                      \"type\": \"circle\",\n                      \"stroke\": {\n                        \"width\": 0,\n                        \"color\": \"#000000\"\n                      },\n                      \"polygon\": {\n                        \"nb_sides\": 5\n                      },\n                      \"image\": {\n                        \"src\": \"img/github.svg\",\n                        \"width\": 100,\n                        \"height\": 100\n                      }\n                    },\n                    \"opacity\": {\n                      \"value\": 1,\n                      \"random\": true,\n                      \"anim\": {\n                        \"enable\": true,\n                        \"speed\": 1,\n                        \"opacity_min\": 0,\n                        \"sync\": false\n                      }\n                    },\n                    \"size\": {\n                      \"value\": 3,\n                      \"random\": true,\n                      \"anim\": {\n                        \"enable\": false,\n                        \"speed\": 4,\n                        \"size_min\": 0.3,\n                        \"sync\": false\n                      }\n                    },\n                    \"line_linked\": {\n                      \"enable\": false,\n                      \"distance\": 150,\n                      \"color\": \"#ffffff\",\n                      \"opacity\": 0.4,\n                      \"width\": 1\n                    },\n                    \"move\": {\n                      \"enable\": true,\n                      \"speed\": 1,\n                      \"direction\": \"none\",\n                      \"random\": true,\n                      \"straight\": false,\n                      \"out_mode\": \"out\",\n                      \"bounce\": false,\n                      \"attract\": {\n                        \"enable\": false,\n                        \"rotateX\": 600,\n                        \"rotateY\": 600\n                      }\n                    }\n                  },\n                  \"interactivity\": {\n                    \"detect_on\": \"canvas\",\n                    \"events\": {\n                      \"onhover\": {\n                        \"enable\": true,\n                        \"mode\": \"bubble\"\n                      },\n                      \"onclick\": {\n                        \"enable\": true,\n                        \"mode\": \"repulse\"\n                      },\n                      \"resize\": true\n                    },\n                    \"modes\": {\n                      \"grab\": {\n                        \"distance\": 400,\n                        \"line_linked\": {\n                          \"opacity\": 1\n                        }\n                      },\n                      \"bubble\": {\n                        \"distance\": 250,\n                        \"size\": 0,\n                        \"duration\": 2,\n                        \"opacity\": 0,\n                        \"speed\": 3\n                      },\n                      \"repulse\": {\n                        \"distance\": 400,\n                        \"duration\": 0.4\n                      },\n                      \"push\": {\n                        \"particles_nb\": 4\n                      },\n                      \"remove\": {\n                        \"particles_nb\": 2\n                      }\n                    }\n                  },\n                  \"retina_detect\": true\n            }} />\n            \n            <div className=\"home-wrap\">\n                {\n                    state.dayMode ? \n                    <div className=\"home-value\">\n                        {state.days}\n                    </div> : ''\n                }\n                {\n                    state.monthMode ? \n                    <div className=\"home-value\">\n                        {state.months}\n                    </div> : ''\n                }\n                {\n                    state.yearMode ? \n                    <div className=\"home-value\">\n                        {state.years}\n                    </div> : ''\n                }\n            </div>\n            <div className=\"home-fun-wrap\">\n                <div className={state.funMode ? \"fun-btn active\" : 'fun-btn'} onClick={() => this.selectFunMode()}>\n                    ?\n                </div>\n            </div>\n            <div className=\"home-btn-wrap\">\n                <div className={state.dayMode ? \"home-btn active\" : \"home-btn\"} onClick={() => this.selectMode('days')}>\n                    Days\n                </div>\n                <div className={state.monthMode ? \"home-btn active\" : \"home-btn\"} onClick={() => this.selectMode('months')}>\n                    Months\n                </div>\n                <div className={state.yearMode ? \"home-btn active\" : \"home-btn\"} onClick={() => this.selectMode('years')}>\n                    Years\n                </div>\n            </div>\n\n            \n            {\n                state.funMode ? <img src={require('../assets/images/fun.jpg')} className=\"fun-img\" /> : ''\n            }\n            {\n                this.state.activeSong ? \n                    <Sound\n                    url={require('../assets/music/'+ this.state.activeSong +'.m4a')}\n                    playStatus={state.funMode ? Sound.status.PLAYING : Sound.status.STOPPED}\n                    loop={true}\n                    // playFromPosition={300}\n                    // onLoading={this.handleSongLoading}\n                    // onPlaying={this.handleSongPlaying}\n                    // onFinishedPlaying={this.handleSongFinishedPlaying}\n                /> : ''\n            }\n\n            {hearts}\n            \n            \n            </div>\n        );\n    }\n}\n\n  \nexport default Home;\n\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Home from '../../pages/Home';\n\n\nexport default () => (\n    <Switch>\n      <Route path=\"/\" exact component={Home} />\n    </Switch>\n);","import React, { Component } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../src/assets/styles/scss/styles.scss';\n\nimport AnimatedSwitch from './assets/scripts/routes';\n\nclass App extends Component {\n\n\trender() {\n\t\treturn (\n\t\t\t<BrowserRouter basename={'/'}>\n\t\t\t\t<AnimatedSwitch />\n\t\t\t</BrowserRouter>\n\t\t);\n\t}\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker === null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './assets/scripts/serviceWorker';\n\n \n\n\nReactDOM.render(\n            <App />,\n document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}